DROP DATABASE IF EXISTS gg_db;
CREATE DATABASE gg_db;
USE gg_db;

CREATE TABLE users (
	userId INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	firstName VARCHAR(30) DEFAULT NULL,
	lastName VARCHAR(30) DEFAULT NULL,
	username VARCHAR(30) NOT NULL UNIQUE,
	email VARCHAR(50) NOT NULL UNIQUE,
	password VARCHAR(32) NOT NULL,
	registeredAt DATETIME DEFAULT NULL ,
	lastLogin DATETIME DEFAULT NULL ,
	intro TINYTEXT

);

CREATE TABLE games (
	gameId INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	gameTitle VARCHAR(50) NOT NULL
);
    
CREATE TABLE game_collections (
	collectionId INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	gameId INTEGER NOT NULL  REFERENCES games(gameId),
	userId INTEGER NOT NULL REFERENCES users(userId)
);
    
CREATE TABLE posts (
	id INTEGER NOT NULL AUTO_INCREMENT,
	authorId INTEGER NOT NULL REFERENCES users(userId),
	title VARCHAR(75) NOT NULL,
	slug VARCHAR(100) NOT NULL,
	summary TINYTEXT,
	createdAt DATETIME NOT NULL,
	updatedAt DATETIME DEFAULT NULL,
	publishedAt DATETIME DEFAULT NULL,
	content TEXT  ,
	PRIMARY KEY (id),
	UNIQUE KEY uq_slug (slug)
); 

CREATE TABLE comments (
	id INTEGER NOT NULL AUTO_INCREMENT,
	postId INTEGER NOT NULL REFERENCES post (id),
	title VARCHAR(100) NOT NULL,
	createdAt DATETIME NOT NULL,
	publishedAt DATETIME DEFAULT NULL,
	content TEXT,
	PRIMARY KEY (id)
); 

CREATE TABLE tag (
	id INTEGER NOT NULL AUTO_INCREMENT,
	title VARCHAR(75) NOT NULL,
	slug VARCHAR(100) NOT NULL,
	content TEXT,
	PRIMARY KEY (id)
);

CREATE TABLE post_tag (
	postId INTEGER NOT NULL,
	tagId INTEGER NOT NULL,
	PRIMARY KEY (postId, tagId),
	KEY idx_pt_tag (tagId),
	KEY idx_pt_post (postId),
	CONSTRAINT fk_pt_post FOREIGN KEY (postId) REFERENCES post (id),
	CONSTRAINT fk_pt_tag FOREIGN KEY (tagId) REFERENCES tag (id)
);